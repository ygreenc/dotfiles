" vim: spell filetype=vim:
set nocompatible
filetype off

" Functions definition {{{
if filereadable(expand("~/.vim/functions"))
  source ~/.vim/functions
endif
" }}}

" Bundles configurations {{{
if filereadable(expand("~/.vim/plugins"))
  source ~/.vim/plugins
endif
" }}}

" General Settings {{{
filetype plugin indent on " Detect file types
syntax on                 " Syntax highlighting
set mouse=""              " I don't want no stinking mouse
scriptencoding utf-8      " Set encoding to utf-8

set history=1000          " Increase history size
set spell                 " Enable Spell-check
set hidden                " Enable buffer switch without saving
set iskeyword-=.          " '.' represents a word
set iskeyword-=#          " '#' represents a word
set iskeyword-=-          " '-' represents a word

set backspace=indent,eol,start " What to delete on backspace
set foldenable                 " Auto-fold
set hlsearch                   " Highlight search term
set ignorecase                 " Default search is case-insensitive
set incsearch                  " Search as you type
set linespace=0                " No extra space between rows
set nu                         " Line numbering
set scrolljump=5               " Jump 5 lines when cursor leave screen
set scrolloff=3                " Minimum lines above or below cursor
set shortmess+=aoOtT           " Abbreviate messages
set showmatch                  " Show matching brackets/parenthesis
set smartcase                  " When uppercase detected, search case-sensitive
set whichwrap=b,s,h,l,<,>,[,]  " Cursor + backspace + default wrap
set wildmenu                   " Display menu instead of auto-complete
set wildmode=list:longest,full " Tab completion order
set winminheight=0             " Window can be any size

set list
set listchars=tab:>\ ,trail:â€¢,extends:#,nbsp:. " Replace special chars in list mode
" }}}

" Temporary files directories {{{
" Double slash prevents name collision
    " Backup {{{
    set backupdir=~/.vim/backup
    set backupdir+=~/.vim-backup
    set backupdir+=.
    set backup
    set writebackup
    " }}}

    " Swap {{{
    set directory=./.vim-swap//
    set directory+=~/.vim/swap//
    set directory+=.
    " }}}

    " Undo {{{
    set undodir=./.vim-undo//
    set undodir+=~/.vim/undo//
    set undofile
    " }}}
" }}}

" Formatting {{{
set nowrap            " No line wrapping
set autoindent        " Indent according to previous line
set shiftwidth=4      " Use 4-spaces indent
set expandtab         " Tabs are spaces, No thank you tabs
set tabstop=4         " Indentation is 4 columns
set softtabstop=4     " Backspace delete indent
set nojoinspaces      " Don't include space after join
set splitright        " vsplit to the right of current
set splitbelow        " hsplit below current
set pastetoggle=<F12> " Sane indentation on paste
" }}}

" Autocommands {{{
    " Remove trailing whitespace"{{{
    augroup trailing_whitespace
        autocmd FileType c,cpp,java,go,php,javascript,puppet,python,rust,twig,xml,yml,perl,sql autocmd BufWritePre <buffer> | call StripTrailingWhitespace()
    augroup END
    " }}}

    " Markdown filetype {{{
    augroup filetype_md
        autocmd BufNewFile,BufReadPost *.md set filetype=markdown
    augroup END
    " }}}

    " Vim filetype {{{
    augroup filetype_vim
        autocmd!
        autocmd FileType vim setlocal foldmethod=marker
    augroup END
    " }}}
" }}}

" Vim UI {{{
set showmode            " Display active mode
set cursorline          " Highlight current line

if !has('gui_running')
  set t_Co=256
endif
" }}}

" Fix Shift mistakes {{{
if has("user_commands")
    command! -bang -nargs=* -complete=file E  e<bang> <args>
    command! -bang -nargs=* -complete=file W  w<bang> <args>
    command! -bang -nargs=* -complete=file Wq wq<bang> <args>
    command! -bang -nargs=* -complete=file WQ QW<bang> <args>
    command! -bang Wa wa<bang>
    command! -bang WA wa<bang>
    command! -bang Q  q<bang>
    command! -bang QA qa<bang>
    command! -bang Qa qa<bang>
endif
" }}}

" Key mappings {{{
if filereadable(expand("~/.vim/keymaps"))
    source ~/.vim/keymaps
endif
" }}}

" Load user configuration {{{
if filereadable(expand("~/.vimrc.local"))
  source ~/.vimrc.local
endif
" }}}
