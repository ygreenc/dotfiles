" Plugs definition
" vim: spell filetype=vim:

" Requirements {{{ 
    set nocompatible
    set background=dark
" }}}

" Setup vim-plug {{{
    call plug#begin("~/.vim/bundle")
" }}}

" Bundle Dependencies

" Vim utility functions {{{
    Plug 'tomtom/tlib_vim'
    Plug 'MarcWeber/vim-addon-mw-utils'
" }}}

" ACK Bundle setup {{{
    if executable('ack')
        Plug 'mileszs/ack.vim'
    endif
" }}}

" NerdTree {{{
    Plug 'scrooloose/nerdtree'
    let NERDTreeShowBookmarks=1
    let NERDTreeIgnore=['\.py[cd]$', '\~$', '\.swo$', '\.swp$', '^\.git$', '^\.hg$', '^\.svn$', '\.bzr$']
    let NERDTreeChDirMode=0
    let NERDTreeQuitOnOpen=1
    let NERDTreeMouseMode=2
    let NERDTreeShowHidden=1
    let NERDTreeKeepTreeInNewTab=1
    let g:nerdtree_tabs_open_on_gui_startup=0
" }}}

" Dark Solarized theme {{{
" https://github.com/w0ng/vim-hybrid
    Plug 'hybrid.vim'
    let g:hybrid_use_Xresources=1
" }}}

" Regular Solarized theme {{{
    Plug 'altercation/vim-colors-solarized'
" }}}

" Color schemes {{{
    Plug 'spf13/vim-colors'
    Plug 'flazz/vim-colorschemes'
" }}}

" Quote and tags (surroundings) {{{
" https://github.com/tpope/vim-surround
    Plug 'tpope/vim-surround'
" }}}

" Expand visual selection {{{
" https://github.com/terryma/vim-expand-region
    Plug 'terryma/vim-expand-region'
" }}}

" Automatically close pair-characters {{{
" https://github.com/spf13/vim-autoclose
    Plug 'spf13/vim-autoclose'
    let g:autoclose_vim_commentmode=1 " Do not autoclose '"' in vimscript
" }}}

" CtrlP: Fuzzy finder (file, path, buffer, etc) {{{
" http://ctrlpvim.github.io/ctrlp.vim/
    Plug 'ctrlpvim/ctrlp.vim'
    let g:ctrlp_working_path_mode = 'ra'
    let g:ctrlp_custom_ignore ={
        \ 'dir': '\.(git|hg|svn)$',
        \ 'file': '\.(so|pyc)$',
        \ }

    let s:ctrlp_fallback = 'ack %s --nocolor -f'
     let g:ctrlp_user_command = {
                \ 'types': {
                    \ 1: ['.git', 'cd %s && git ls-files . --cached --exclude-standard --others'],
                    \ 2: ['.hg', 'hg --cwd %s locate -I .'],
                \ },
                \ 'fallback': s:ctrlp_fallback
            \ }
" }}}

" Sublime-like Multiple selections {{{
" https://github.com/terryma/vim-multiple-cursors
    Plug 'kristijanhusak/vim-multiple-cursors'
" }}}

" Buffer list in statusline {{{
" https://github.com/bling/vim-bufferline
    Plug 'bling/vim-bufferline'
    let g:bufferline_active_buffer_left = ''
    let g:bufferline_active_buffer_right = ''
" }}}

" Lighline: Statusline-light {{{
" https://github.com/itchyny/lightline.vim
    Plug 'itchyny/lightline.vim'
    set laststatus=2

    let g:lightline = {
        \ 'active': {
        \   'left': [ [ 'mode', 'paste'], [ 'filename' ], [ 'bufferline' ] ],
        \ },
        \ 'separator': { 'left': '', 'right': '' },
        \ 'subseparator': { 'left': '', 'right': '' },
        \ 'component': {
        \   'bufferline': '%{bufferline#refresh_status()}%{g:bufferline_status_info.before}%#TabLineSel#%{g:bufferline_status_info.current}%#LightLineLeft_active_3#%{g:bufferline_status_info.after}'
        \ }
    \ }
" }}}

" EasyMotion, Vim motion with highlighting {{{
" https://github.com/Lokaltog/vim-easymotion
    Plug 'Lokaltog/vim-easymotion'
" }}}

" NERDTree + Tabs fix {{{
" https://github.com/jistr/vim-nerdtree-tabs
    Plug 'jistr/vim-nerdtree-tabs'
" }}}

" NERDCommenter: Comments helper {{{
" https://github.com/scrooloose/nerdcommenter
    Plug 'scrooloose/nerdcommenter'
" } 

" UndoTree {{{
" https://github.com/mbbill/undotree
    Plug 'mbbill/undotree'
    let g:undotree_SetFocusWhenToggle=1
" }}}

" Abolish: Easy Substitution {{{
" https://github.com/tpope/vim-abolish
    Plug 'tpope/vim-abolish'
" }}}

" Tabular: Aligning text {{{
" https://github.com/godlygeek/tabular
    Plug 'godlygeek/tabular'
" }}}

" Tagbar: Class outline {{{
" http://majutsushi.github.io/tagbar
    Plug 'majutsushi/tagbar'
" }}}

" YouCompleteMe: Code-completion engine{{{
" http://valloric.github.io/YouCompleteMe/"
    "if v:version > 703
        "Plug 'Valloric/YouCompleteMe', { 'do': './install.sh'}
    "endif
" }}}

" UltiSnips: Snippets auto-complete {{{
    if v:version > 703
        Plug 'SirVer/ultisnips'
        Plug 'honza/vim-snippets'
    endif
" }}}

" Split window horizontally {{{
    let g:UltiSnipsEditSplit="vertical"
" }}}

" Twig Syntax Highlighting {{{
" https://github.com/beyondwords/vim-twig
    Plug 'beyondwords/vim-twig'
" }}}

" HTML-AutoCloseTag: Automatically close html tags {{{
" https://github.com/amirh/HTML-AutoCloseTag
    Plug 'amirh/HTML-AutoCloseTag'
" }}}

" CSS3-Syntax: Add CSS3 Syntax highlighting {{{
" https://github.com/hail2u/vim-css3-syntax
    Plug 'hail2u/vim-css3-syntax', { 'for': 'css' }
" }}}

" HTML Color preview {{{
" https://github.com/gorodinskiy/vim-coloresque
    Plug 'gorodinskiy/vim-coloresque'
" }}}

" Javascript Syntax Support Enhanced {{{
" https://github.com/pangloss/vim-javascript
    Plug 'pangloss/vim-javascript'
" }}}

" Better JSON support {{{
" https://github.com/elzr/vim-json
    Plug 'elzr/vim-json', { 'for': 'json' }
" }}}

" GitGutter: Git diff in gutter {{{
" https://github.com/airblade/vim-gitgutter
    Plug 'airblade/vim-gitgutter'
" }}}

" Clojure {{{
if executable("lein")
    " fireplace: Clojure REPL {{{
    " https://github.com/tpope/vim-fireplace
        Plug 'tpope/vim-fireplace', { 'for': 'clojure' }
    " }}}
    " vim-clojure-static: Syntax for clojure {{{
    " https://github.com/guns/vim-clojure-static
        Plug 'guns/vim-clojure-static', { 'for': 'clojure'}
    " }}}
    " vim-leiningen: Static vim support for Leiningen {{{
    " https://github.com/tpope/vim-leiningen
        Plug 'tpope/vim-leiningen'
    " }}}
endif
" }}}

" Racket {{{
if executable("racket")
    " Racket bundle {{{
    " https://github.com/wlangstroth/vim-racket
    Plug 'wlangstroth/vim-racket', { 'for': 'racket' }
    " }}}
endif
" }}}

" Lisp-like {{{
    Plug 'kien/rainbow_parentheses.vim', { 'for': ['clojure', 'racket'] }
" }}}

call plug#end()
